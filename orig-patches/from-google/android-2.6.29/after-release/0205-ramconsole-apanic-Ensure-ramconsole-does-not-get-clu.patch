From 2e513c1f05a9d065ca8c3cad7ee95d81ccd66fdb Mon Sep 17 00:00:00 2001
From: San Mehat <san@google.com>
Date: Thu, 17 Sep 2009 14:27:41 -0700
Subject: [PATCH 205/247] ramconsole/apanic: Ensure ramconsole does not get cluttered by apanic threads

Signed-off-by: San Mehat <san@google.com>
---
 drivers/misc/apanic.c                 |    4 ++++
 drivers/staging/android/ram_console.c |    8 ++++++++
 2 files changed, 12 insertions(+), 0 deletions(-)

diff --git a/drivers/misc/apanic.c b/drivers/misc/apanic.c
index fde0871..2f858be 100644
--- a/drivers/misc/apanic.c
+++ b/drivers/misc/apanic.c
@@ -38,6 +38,8 @@
 #include <linux/workqueue.h>
 #include <linux/preempt.h>
 
+extern void ram_console_enable_console(int);
+
 struct panic_header {
 	u32 magic;
 #define PANIC_MAGIC 0xdeadf00d
@@ -468,6 +470,8 @@ static int apanic(struct notifier_block *this, unsigned long event,
 	if (!threads_offset)
 		threads_offset = ctx->mtd->writesize;
 
+	ram_console_enable_console(0);
+
 	log_buf_clear();
 	show_state_filter(0);
 	threads_len = apanic_write_console(ctx->mtd, threads_offset);
diff --git a/drivers/staging/android/ram_console.c b/drivers/staging/android/ram_console.c
index 3375c1c..0ee25bd 100644
--- a/drivers/staging/android/ram_console.c
+++ b/drivers/staging/android/ram_console.c
@@ -146,6 +146,14 @@ static struct console ram_console = {
 	.index	= -1,
 };
 
+void ram_console_enable_console(int enabled)
+{
+	if (enabled)
+		ram_console.flags |= CON_ENABLED;
+	else
+		ram_console.flags &= ~CON_ENABLED;
+}
+
 static void __init
 ram_console_save_old(struct ram_console_buffer *buffer, char *dest)
 {
-- 
1.7.0.4

